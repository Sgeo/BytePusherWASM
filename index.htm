<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>BytePusher</title>
        <meta name="viewport" content="width=device-width">
    </head>
    <body>
        <div id="selector">
            <ul>
                <li><button type="button" data-url="roms/Palette Test.BytePusher">Palette Test by Javamannen</button></li>
                <li><button type="button" data-url="roms/Scrolling Logo.BytePusher">Scrolling Logo by Javamannen</button></li>
                <li><button type="button" data-url="roms/Munching_Squares.BytePusher">Munching Squares by zzo38</button></li>
                <li><button type="button" data-url="roms/Audio Test.BytePusher">Audio Test by Javamannen</button></li>
                <li><button type="button" data-url="roms/SineScroller.BytePusher">SineScroller by Javamannen</button></li>
                <li><button type="button" data-url="roms/Sprites.BytePusher">Sprites by Javamannen</button></li>
                <li><button type="button" data-url="roms/invertloopsine.BytePusher">"Invert Loop" sine by Ben Russell</button></li>
                <li><button type="button" data-url="roms/nyan.bp">Nyan Cat by Nucular</button></li>
            </ul>
        </div>
        <div><canvas width="256" height="256"></canvas></div>
        <script type="module">
            import { BytePusher } from "./bytepusher.js";
            window.addEventListener("popstate", function(event) {
                if(event.state === "playing") {
                    window.location.reload();
                }
            });
            document.querySelector("#selector").addEventListener("click", async function(event) {
                if(!event.target.dataset.url) {
                    return;
                }
                document.querySelector("#selector").style.display = "none";
                let audioCtx = new AudioContext({
                    sampleRate: 256 * 60,
                });
                const canvas = document.querySelector("canvas");
                const ctx = canvas.getContext("2d");
                window.bp = new BytePusher;
                await bp.init(audioCtx);
                let rom = await fetch(event.target.dataset.url).then(r => r.arrayBuffer());
                bp.load(rom);
                history.pushState("playing", "", null);
                let previousTime = document.timeline.currentTime;
                requestAnimationFrame(function frame(time) {
                    requestAnimationFrame(frame);
                    if(true) {
//                        let numFrames = (time - previousTime)/(1000/60);
                        let numFrames = 1;
                        for(let i = 0; i < numFrames; i++) {
                            bp.frame(ctx);
                        }
                        previousTime = time;
                    }
                });
            });

        </script>
    </body>
</html>